name: Release Negev Binaries

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Prepare environment
        run: |
          TAG="${{ inputs.tag }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists. I stop to avoid overriding release."
            exit 1
          fi
          BUILD_TIME="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "BUILD_TIME=$BUILD_TIME" >> $GITHUB_ENV
          echo "LD_FLAGS=-s -w -X main.version=$TAG -X main.buildTime=$BUILD_TIME" >> $GITHUB_ENV

      - name: Build linux amd64
        run: |
          mkdir -p dist/linux-amd64
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -trimpath -tags netgo -ldflags="$LD_FLAGS" -o dist/linux-amd64/negev ./cmd/negev
          tar -C dist/linux-amd64 -czf dist/negev_${TAG}_linux_amd64.tar.gz negev

      - name: Build linux arm64
        run: |
          mkdir -p dist/linux-arm64
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -trimpath -tags netgo -ldflags="$LD_FLAGS" -o dist/linux-arm64/negev ./cmd/negev
          tar -C dist/linux-arm64 -czf dist/negev_${TAG}_linux_arm64.tar.gz negev

      - name: Build darwin amd64
        run: |
          mkdir -p dist/darwin-amd64
          GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -trimpath -tags netgo -ldflags="$LD_FLAGS" -o dist/darwin-amd64/negev ./cmd/negev
          tar -C dist/darwin-amd64 -czf dist/negev_${TAG}_darwin_amd64.tar.gz negev

      - name: Build darwin arm64
        run: |
          mkdir -p dist/darwin-arm64
          GOOS=darwin GOARCH=arm64 CGO_ENABLED=0 go build -trimpath -tags netgo -ldflags="$LD_FLAGS" -o dist/darwin-arm64/negev ./cmd/negev
          tar -C dist/darwin-arm64 -czf dist/negev_${TAG}_darwin_arm64.tar.gz negev

      - name: Build windows amd64
        run: |
          mkdir -p dist/windows-amd64
          GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -trimpath -tags netgo -ldflags="$LD_FLAGS" -o dist/windows-amd64/negev.exe ./cmd/negev
          (cd dist/windows-amd64 && zip -j ../negev_${TAG}_windows_amd64.zip negev.exe)

      - name: Build windows arm64
        run: |
          mkdir -p dist/windows-arm64
          GOOS=windows GOARCH=arm64 CGO_ENABLED=0 go build -trimpath -tags netgo -ldflags="$LD_FLAGS" -o dist/windows-arm64/negev.exe ./cmd/negev
          (cd dist/windows-arm64 && zip -j ../negev_${TAG}_windows_arm64.zip negev.exe)

      - name: Create git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "$TAG"
          git push origin "$TAG"

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          name: Negev ${{ env.TAG }}
          tag_name: ${{ env.TAG }}
          generate_release_notes: true
          files: |
            dist/negev_${{ env.TAG }}_linux_amd64.tar.gz
            dist/negev_${{ env.TAG }}_linux_arm64.tar.gz
            dist/negev_${{ env.TAG }}_darwin_amd64.tar.gz
            dist/negev_${{ env.TAG }}_darwin_arm64.tar.gz
            dist/negev_${{ env.TAG }}_windows_amd64.zip
            dist/negev_${{ env.TAG }}_windows_arm64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
